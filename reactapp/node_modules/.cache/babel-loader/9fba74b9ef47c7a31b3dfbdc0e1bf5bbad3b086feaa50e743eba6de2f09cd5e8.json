{"ast":null,"code":"var _jsxFileName = \"E:\\\\3RD YEAR\\\\HealthcareAppointmentManagementSystem\\\\reactapp\\\\src\\\\components\\\\AppointmentForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { fetchDoctors, createAppointment } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookAppointment() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const patient = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.patient;\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [specializationFilter, setSpecializationFilter] = useState(\"\");\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [availableDates, setAvailableDates] = useState([]);\n  const [availableTimes, setAvailableTimes] = useState([]);\n  const [form, setForm] = useState({\n    doctorId: \"\",\n    date: \"\",\n    time: \"\",\n    reason: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const specializations = [\"Cardiology\", \"Dermatology\", \"Neurology\", \"Orthopedics\", \"Pediatrics\", \"General Medicine\"];\n\n  // Load doctors\n  useEffect(() => {\n    const loadDoctors = async () => {\n      try {\n        const data = await fetchDoctors();\n        setDoctors(data);\n        setFilteredDoctors(data);\n      } catch (err) {\n        setMessage(\"Failed to load doctors\");\n      }\n    };\n    loadDoctors();\n  }, []);\n\n  // Filter doctors by specialization\n  useEffect(() => {\n    let filtered = doctors;\n    if (specializationFilter) {\n      filtered = filtered.filter(doc => doc.specialization.toLowerCase() === specializationFilter.toLowerCase());\n    }\n    setFilteredDoctors(filtered);\n    setSelectedDoctor(null);\n    setAvailableDates([]);\n    setAvailableTimes([]);\n    setForm({\n      ...form,\n      doctorId: \"\",\n      date: \"\",\n      time: \"\"\n    });\n  }, [specializationFilter, doctors]);\n  if (!patient) {\n    navigate(\"/\");\n    return null;\n  }\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleDoctorChange = e => {\n    const doctor = filteredDoctors.find(d => d.id.toString() === e.target.value);\n    setSelectedDoctor(doctor);\n    setForm({\n      ...form,\n      doctorId: Number(e.target.value),\n      date: \"\",\n      time: \"\"\n    });\n\n    // Compute next 14 days with availability\n    const dates = [];\n    const today = new Date();\n    for (let i = 0; i < 14; i++) {\n      const date = new Date(today);\n      date.setDate(today.getDate() + i);\n      const dayName = date.toLocaleDateString(\"en-US\", {\n        weekday: \"long\"\n      }).toUpperCase();\n      if (doctor.dailyAvailability && doctor.dailyAvailability[dayName]) {\n        dates.push(date.toISOString().split(\"T\")[0]); // yyyy-mm-dd\n      }\n    }\n    setAvailableDates(dates);\n    setAvailableTimes([]);\n  };\n  const handleDateChange = e => {\n    const date = e.target.value;\n    setForm({\n      ...form,\n      date,\n      time: \"\"\n    });\n    if (!selectedDoctor) return;\n    const dayName = new Date(date).toLocaleDateString(\"en-US\", {\n      weekday: \"long\"\n    }).toUpperCase();\n    const slots = selectedDoctor.dailyAvailability[dayName]; // \"09:00-12:00,14:00-17:00\"\n    if (slots) {\n      const times = [];\n      slots.split(\",\").forEach(slot => {\n        const [start, end] = slot.split(\"-\");\n        let [h, m] = start.split(\":\").map(Number);\n        const [endH, endM] = end.split(\":\").map(Number);\n        while (h < endH || h === endH && m < endM) {\n          const hh = h.toString().padStart(2, \"0\");\n          const mm = m.toString().padStart(2, \"0\");\n          times.push(`${hh}:${mm}`);\n\n          // increment 30 minutes\n          m += 30;\n          if (m >= 60) {\n            m = m % 60;\n            h += 1;\n          }\n        }\n      });\n      setAvailableTimes(times);\n    } else {\n      setAvailableTimes([]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!form.doctorId || !form.date || !form.time) {\n      setMessage(\"Please select doctor, date, and time\");\n      return;\n    }\n    try {\n      const requestBody = {\n        patientId: Number(patient.id),\n        doctorId: Number(form.doctorId),\n        appointmentDate: form.date,\n        // yyyy-MM-dd\n        appointmentTime: form.time,\n        // HH:mm\n        reason: form.reason\n      };\n      console.log(\"Submitting appointment:\", requestBody);\n      await createAppointment(requestBody);\n      setMessage(\"Appointment booked successfully!\");\n      setTimeout(() => navigate(\"/dashboard\", {\n        state: {\n          patient\n        }\n      }), 1500);\n    } catch (error) {\n      setMessage(error.message || \"Failed to book appointment\");\n    }\n  };\n  const to12HourFormat = time => {\n    const [h, m] = time.split(\":\").map(Number);\n    const ampm = h >= 12 ? \"PM\" : \"AM\";\n    const hour12 = h % 12 === 0 ? 12 : h % 12;\n    return `${hour12}:${m.toString().padStart(2, \"0\")} ${ampm}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"20px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Book Appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: specializationFilter,\n        onChange: e => setSpecializationFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Specialization --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), specializations.map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: spec,\n          children: spec\n        }, spec, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Doctor:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"doctorId\",\n        value: form.doctorId,\n        onChange: handleDoctorChange,\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Doctor --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), filteredDoctors.map(doc => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: doc.id,\n          children: [doc.name, \" (\", doc.specialization, \")\"]\n        }, doc.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"date\",\n        value: form.date,\n        onChange: handleDateChange,\n        required: true,\n        disabled: !selectedDoctor,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Date --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), availableDates.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: d,\n          children: d\n        }, d, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"time\",\n        value: form.time,\n        onChange: handleChange,\n        required: true,\n        disabled: !form.date,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Select Time --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), availableTimes.map(t => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: t,\n          children: to12HourFormat(t)\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reason:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"reason\",\n        value: form.reason,\n        onChange: handleChange,\n        placeholder: \"Enter reason for appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_s(BookAppointment, \"5UdZ9mUHmALlVkMPSjIAy0TKgU4=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","useNavigate","fetchDoctors","createAppointment","jsxDEV","_jsxDEV","BookAppointment","_s","_location$state","location","navigate","patient","state","doctors","setDoctors","filteredDoctors","setFilteredDoctors","specializationFilter","setSpecializationFilter","selectedDoctor","setSelectedDoctor","availableDates","setAvailableDates","availableTimes","setAvailableTimes","form","setForm","doctorId","date","time","reason","message","setMessage","specializations","loadDoctors","data","err","filtered","filter","doc","specialization","toLowerCase","handleChange","e","target","name","value","handleDoctorChange","doctor","find","d","id","toString","Number","dates","today","Date","i","setDate","getDate","dayName","toLocaleDateString","weekday","toUpperCase","dailyAvailability","push","toISOString","split","handleDateChange","slots","times","forEach","slot","start","end","h","m","map","endH","endM","hh","padStart","mm","handleSubmit","preventDefault","requestBody","patientId","appointmentDate","appointmentTime","console","log","setTimeout","error","to12HourFormat","ampm","hour12","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","onChange","spec","onSubmit","required","disabled","t","placeholder","type","_c","$RefreshReg$"],"sources":["E:/3RD YEAR/HealthcareAppointmentManagementSystem/reactapp/src/components/AppointmentForm.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport { fetchDoctors, createAppointment } from \"../utils/api\";\r\n\r\nfunction BookAppointment() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const patient = location.state?.patient;\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\r\n  const [specializationFilter, setSpecializationFilter] = useState(\"\");\r\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\r\n  const [availableDates, setAvailableDates] = useState([]);\r\n  const [availableTimes, setAvailableTimes] = useState([]);\r\n  const [form, setForm] = useState({\r\n    doctorId: \"\",\r\n    date: \"\",\r\n    time: \"\",\r\n    reason: \"\"\r\n  });\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const specializations = [\r\n    \"Cardiology\",\r\n    \"Dermatology\",\r\n    \"Neurology\",\r\n    \"Orthopedics\",\r\n    \"Pediatrics\",\r\n    \"General Medicine\"\r\n  ];\r\n\r\n  // Load doctors\r\n  useEffect(() => {\r\n    const loadDoctors = async () => {\r\n      try {\r\n        const data = await fetchDoctors();\r\n        setDoctors(data);\r\n        setFilteredDoctors(data);\r\n      } catch (err) {\r\n        setMessage(\"Failed to load doctors\");\r\n      }\r\n    };\r\n    loadDoctors();\r\n  }, []);\r\n\r\n  // Filter doctors by specialization\r\n  useEffect(() => {\r\n    let filtered = doctors;\r\n    if (specializationFilter) {\r\n      filtered = filtered.filter(\r\n        (doc) =>\r\n          doc.specialization.toLowerCase() === specializationFilter.toLowerCase()\r\n      );\r\n    }\r\n    setFilteredDoctors(filtered);\r\n    setSelectedDoctor(null);\r\n    setAvailableDates([]);\r\n    setAvailableTimes([]);\r\n    setForm({ ...form, doctorId: \"\", date: \"\", time: \"\" });\r\n  }, [specializationFilter, doctors]);\r\n\r\n  if (!patient) {\r\n    navigate(\"/\");\r\n    return null;\r\n  }\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleDoctorChange = (e) => {\r\n    const doctor = filteredDoctors.find(\r\n      (d) => d.id.toString() === e.target.value\r\n    );\r\n    setSelectedDoctor(doctor);\r\n    setForm({ ...form, doctorId: Number(e.target.value), date: \"\", time: \"\" });\r\n\r\n    // Compute next 14 days with availability\r\n    const dates = [];\r\n    const today = new Date();\r\n    for (let i = 0; i < 14; i++) {\r\n      const date = new Date(today);\r\n      date.setDate(today.getDate() + i);\r\n      const dayName = date\r\n        .toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n        .toUpperCase();\r\n      if (doctor.dailyAvailability && doctor.dailyAvailability[dayName]) {\r\n        dates.push(date.toISOString().split(\"T\")[0]); // yyyy-mm-dd\r\n      }\r\n    }\r\n    setAvailableDates(dates);\r\n    setAvailableTimes([]);\r\n  };\r\n\r\n  const handleDateChange = (e) => {\r\n    const date = e.target.value;\r\n    setForm({ ...form, date, time: \"\" });\r\n\r\n    if (!selectedDoctor) return;\r\n\r\n    const dayName = new Date(date)\r\n      .toLocaleDateString(\"en-US\", { weekday: \"long\" })\r\n      .toUpperCase();\r\n\r\n    const slots = selectedDoctor.dailyAvailability[dayName]; // \"09:00-12:00,14:00-17:00\"\r\n    if (slots) {\r\n      const times = [];\r\n      slots.split(\",\").forEach((slot) => {\r\n        const [start, end] = slot.split(\"-\");\r\n        let [h, m] = start.split(\":\").map(Number);\r\n        const [endH, endM] = end.split(\":\").map(Number);\r\n\r\n        while (h < endH || (h === endH && m < endM)) {\r\n          const hh = h.toString().padStart(2, \"0\");\r\n          const mm = m.toString().padStart(2, \"0\");\r\n          times.push(`${hh}:${mm}`);\r\n\r\n          // increment 30 minutes\r\n          m += 30;\r\n          if (m >= 60) {\r\n            m = m % 60;\r\n            h += 1;\r\n          }\r\n        }\r\n      });\r\n      setAvailableTimes(times);\r\n    } else {\r\n      setAvailableTimes([]);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!form.doctorId || !form.date || !form.time) {\r\n      setMessage(\"Please select doctor, date, and time\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const requestBody = {\r\n        patientId: Number(patient.id),\r\n        doctorId: Number(form.doctorId),\r\n        appointmentDate: form.date,   // yyyy-MM-dd\r\n        appointmentTime: form.time,   // HH:mm\r\n        reason: form.reason\r\n      };\r\n\r\n      console.log(\"Submitting appointment:\", requestBody);\r\n\r\n      await createAppointment(requestBody);\r\n\r\n      setMessage(\"Appointment booked successfully!\");\r\n      setTimeout(() => navigate(\"/dashboard\", { state: { patient } }), 1500);\r\n    } catch (error) {\r\n      setMessage(error.message || \"Failed to book appointment\");\r\n    }\r\n  };\r\n\r\n  const to12HourFormat = (time) => {\r\n    const [h, m] = time.split(\":\").map(Number);\r\n    const ampm = h >= 12 ? \"PM\" : \"AM\";\r\n    const hour12 = h % 12 === 0 ? 12 : h % 12;\r\n    return `${hour12}:${m.toString().padStart(2, \"0\")} ${ampm}`;\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"20px auto\" }}>\r\n      <h2>Book Appointment</h2>\r\n\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <select\r\n          value={specializationFilter}\r\n          onChange={(e) => setSpecializationFilter(e.target.value)}\r\n        >\r\n          <option value=\"\">-- Select Specialization --</option>\r\n          {specializations.map((spec) => (\r\n            <option key={spec} value={spec}>\r\n              {spec}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Doctor:</label>\r\n        <br />\r\n        <select\r\n          name=\"doctorId\"\r\n          value={form.doctorId}\r\n          onChange={handleDoctorChange}\r\n          required\r\n        >\r\n          <option value=\"\">-- Select Doctor --</option>\r\n          {filteredDoctors.map((doc) => (\r\n            <option key={doc.id} value={doc.id}>\r\n              {doc.name} ({doc.specialization})\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br /><br />\r\n\r\n        <label>Date:</label>\r\n        <br />\r\n        <select\r\n          name=\"date\"\r\n          value={form.date}\r\n          onChange={handleDateChange}\r\n          required\r\n          disabled={!selectedDoctor}\r\n        >\r\n          <option value=\"\">-- Select Date --</option>\r\n          {availableDates.map((d) => (\r\n            <option key={d} value={d}>\r\n              {d}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br /><br />\r\n\r\n        <label>Time:</label>\r\n        <br />\r\n        <select\r\n          name=\"time\"\r\n          value={form.time}\r\n          onChange={handleChange}\r\n          required\r\n          disabled={!form.date}\r\n        >\r\n          <option value=\"\">-- Select Time --</option>\r\n          {availableTimes.map((t) => (\r\n            <option key={t} value={t}>\r\n              {to12HourFormat(t)}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <br /><br />\r\n\r\n        <label>Reason:</label>\r\n        <br />\r\n        <textarea\r\n          name=\"reason\"\r\n          value={form.reason}\r\n          onChange={handleChange}\r\n          placeholder=\"Enter reason for appointment\"\r\n        />\r\n        <br /><br />\r\n\r\n        <button type=\"submit\">Book Appointment</button>\r\n      </form>\r\n\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookAppointment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,YAAY,EAAEC,iBAAiB,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EACzB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,OAAO,IAAAH,eAAA,GAAGC,QAAQ,CAACG,KAAK,cAAAJ,eAAA,uBAAdA,eAAA,CAAgBG,OAAO;EAEvC,MAAM,CAACE,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,eAAe,EAAEC,kBAAkB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkB,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwB,cAAc,EAAEC,iBAAiB,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC0B,IAAI,EAAEC,OAAO,CAAC,GAAG3B,QAAQ,CAAC;IAC/B4B,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjC,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMkC,eAAe,GAAG,CACtB,YAAY,EACZ,aAAa,EACb,WAAW,EACX,aAAa,EACb,YAAY,EACZ,kBAAkB,CACnB;;EAED;EACAnC,SAAS,CAAC,MAAM;IACd,MAAMoC,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMjC,YAAY,CAAC,CAAC;QACjCY,UAAU,CAACqB,IAAI,CAAC;QAChBnB,kBAAkB,CAACmB,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZJ,UAAU,CAAC,wBAAwB,CAAC;MACtC;IACF,CAAC;IACDE,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACApC,SAAS,CAAC,MAAM;IACd,IAAIuC,QAAQ,GAAGxB,OAAO;IACtB,IAAII,oBAAoB,EAAE;MACxBoB,QAAQ,GAAGA,QAAQ,CAACC,MAAM,CACvBC,GAAG,IACFA,GAAG,CAACC,cAAc,CAACC,WAAW,CAAC,CAAC,KAAKxB,oBAAoB,CAACwB,WAAW,CAAC,CAC1E,CAAC;IACH;IACAzB,kBAAkB,CAACqB,QAAQ,CAAC;IAC5BjB,iBAAiB,CAAC,IAAI,CAAC;IACvBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,iBAAiB,CAAC,EAAE,CAAC;IACrBE,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;EACxD,CAAC,EAAE,CAACZ,oBAAoB,EAAEJ,OAAO,CAAC,CAAC;EAEnC,IAAI,CAACF,OAAO,EAAE;IACZD,QAAQ,CAAC,GAAG,CAAC;IACb,OAAO,IAAI;EACb;EAEA,MAAMgC,YAAY,GAAIC,CAAC,IAAK;IAC1BjB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAE,CAACkB,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EACvD,CAAC;EAED,MAAMC,kBAAkB,GAAIJ,CAAC,IAAK;IAChC,MAAMK,MAAM,GAAGjC,eAAe,CAACkC,IAAI,CAChCC,CAAC,IAAKA,CAAC,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC,KAAKT,CAAC,CAACC,MAAM,CAACE,KACtC,CAAC;IACD1B,iBAAiB,CAAC4B,MAAM,CAAC;IACzBtB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEE,QAAQ,EAAE0B,MAAM,CAACV,CAAC,CAACC,MAAM,CAACE,KAAK,CAAC;MAAElB,IAAI,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;;IAE1E;IACA,MAAMyB,KAAK,GAAG,EAAE;IAChB,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3B,MAAM7B,IAAI,GAAG,IAAI4B,IAAI,CAACD,KAAK,CAAC;MAC5B3B,IAAI,CAAC8B,OAAO,CAACH,KAAK,CAACI,OAAO,CAAC,CAAC,GAAGF,CAAC,CAAC;MACjC,MAAMG,OAAO,GAAGhC,IAAI,CACjBiC,kBAAkB,CAAC,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAC,CAAC,CAChDC,WAAW,CAAC,CAAC;MAChB,IAAIf,MAAM,CAACgB,iBAAiB,IAAIhB,MAAM,CAACgB,iBAAiB,CAACJ,OAAO,CAAC,EAAE;QACjEN,KAAK,CAACW,IAAI,CAACrC,IAAI,CAACsC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAChD;IACF;IACA7C,iBAAiB,CAACgC,KAAK,CAAC;IACxB9B,iBAAiB,CAAC,EAAE,CAAC;EACvB,CAAC;EAED,MAAM4C,gBAAgB,GAAIzB,CAAC,IAAK;IAC9B,MAAMf,IAAI,GAAGe,CAAC,CAACC,MAAM,CAACE,KAAK;IAC3BpB,OAAO,CAAC;MAAE,GAAGD,IAAI;MAAEG,IAAI;MAAEC,IAAI,EAAE;IAAG,CAAC,CAAC;IAEpC,IAAI,CAACV,cAAc,EAAE;IAErB,MAAMyC,OAAO,GAAG,IAAIJ,IAAI,CAAC5B,IAAI,CAAC,CAC3BiC,kBAAkB,CAAC,OAAO,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAC,CAAC,CAChDC,WAAW,CAAC,CAAC;IAEhB,MAAMM,KAAK,GAAGlD,cAAc,CAAC6C,iBAAiB,CAACJ,OAAO,CAAC,CAAC,CAAC;IACzD,IAAIS,KAAK,EAAE;MACT,MAAMC,KAAK,GAAG,EAAE;MAChBD,KAAK,CAACF,KAAK,CAAC,GAAG,CAAC,CAACI,OAAO,CAAEC,IAAI,IAAK;QACjC,MAAM,CAACC,KAAK,EAAEC,GAAG,CAAC,GAAGF,IAAI,CAACL,KAAK,CAAC,GAAG,CAAC;QACpC,IAAI,CAACQ,CAAC,EAAEC,CAAC,CAAC,GAAGH,KAAK,CAACN,KAAK,CAAC,GAAG,CAAC,CAACU,GAAG,CAACxB,MAAM,CAAC;QACzC,MAAM,CAACyB,IAAI,EAAEC,IAAI,CAAC,GAAGL,GAAG,CAACP,KAAK,CAAC,GAAG,CAAC,CAACU,GAAG,CAACxB,MAAM,CAAC;QAE/C,OAAOsB,CAAC,GAAGG,IAAI,IAAKH,CAAC,KAAKG,IAAI,IAAIF,CAAC,GAAGG,IAAK,EAAE;UAC3C,MAAMC,EAAE,GAAGL,CAAC,CAACvB,QAAQ,CAAC,CAAC,CAAC6B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UACxC,MAAMC,EAAE,GAAGN,CAAC,CAACxB,QAAQ,CAAC,CAAC,CAAC6B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;UACxCX,KAAK,CAACL,IAAI,CAAC,GAAGe,EAAE,IAAIE,EAAE,EAAE,CAAC;;UAEzB;UACAN,CAAC,IAAI,EAAE;UACP,IAAIA,CAAC,IAAI,EAAE,EAAE;YACXA,CAAC,GAAGA,CAAC,GAAG,EAAE;YACVD,CAAC,IAAI,CAAC;UACR;QACF;MACF,CAAC,CAAC;MACFnD,iBAAiB,CAAC8C,KAAK,CAAC;IAC1B,CAAC,MAAM;MACL9C,iBAAiB,CAAC,EAAE,CAAC;IACvB;EACF,CAAC;EAED,MAAM2D,YAAY,GAAG,MAAOxC,CAAC,IAAK;IAChCA,CAAC,CAACyC,cAAc,CAAC,CAAC;IAClB,IAAI,CAAC3D,IAAI,CAACE,QAAQ,IAAI,CAACF,IAAI,CAACG,IAAI,IAAI,CAACH,IAAI,CAACI,IAAI,EAAE;MAC9CG,UAAU,CAAC,sCAAsC,CAAC;MAClD;IACF;IAEA,IAAI;MACF,MAAMqD,WAAW,GAAG;QAClBC,SAAS,EAAEjC,MAAM,CAAC1C,OAAO,CAACwC,EAAE,CAAC;QAC7BxB,QAAQ,EAAE0B,MAAM,CAAC5B,IAAI,CAACE,QAAQ,CAAC;QAC/B4D,eAAe,EAAE9D,IAAI,CAACG,IAAI;QAAI;QAC9B4D,eAAe,EAAE/D,IAAI,CAACI,IAAI;QAAI;QAC9BC,MAAM,EAAEL,IAAI,CAACK;MACf,CAAC;MAED2D,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEL,WAAW,CAAC;MAEnD,MAAMlF,iBAAiB,CAACkF,WAAW,CAAC;MAEpCrD,UAAU,CAAC,kCAAkC,CAAC;MAC9C2D,UAAU,CAAC,MAAMjF,QAAQ,CAAC,YAAY,EAAE;QAAEE,KAAK,EAAE;UAAED;QAAQ;MAAE,CAAC,CAAC,EAAE,IAAI,CAAC;IACxE,CAAC,CAAC,OAAOiF,KAAK,EAAE;MACd5D,UAAU,CAAC4D,KAAK,CAAC7D,OAAO,IAAI,4BAA4B,CAAC;IAC3D;EACF,CAAC;EAED,MAAM8D,cAAc,GAAIhE,IAAI,IAAK;IAC/B,MAAM,CAAC8C,CAAC,EAAEC,CAAC,CAAC,GAAG/C,IAAI,CAACsC,KAAK,CAAC,GAAG,CAAC,CAACU,GAAG,CAACxB,MAAM,CAAC;IAC1C,MAAMyC,IAAI,GAAGnB,CAAC,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IAClC,MAAMoB,MAAM,GAAGpB,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,EAAE,GAAGA,CAAC,GAAG,EAAE;IACzC,OAAO,GAAGoB,MAAM,IAAInB,CAAC,CAACxB,QAAQ,CAAC,CAAC,CAAC6B,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIa,IAAI,EAAE;EAC7D,CAAC;EAED,oBACEzF,OAAA;IAAK2F,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAC,QAAA,gBACrD9F,OAAA;MAAA8F,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzBlG,OAAA;MAAK2F,KAAK,EAAE;QAAEQ,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,eACnC9F,OAAA;QACEyC,KAAK,EAAE7B,oBAAqB;QAC5BwF,QAAQ,EAAG9D,CAAC,IAAKzB,uBAAuB,CAACyB,CAAC,CAACC,MAAM,CAACE,KAAK,CAAE;QAAAqD,QAAA,gBAEzD9F,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAqD,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACpDtE,eAAe,CAAC4C,GAAG,CAAE6B,IAAI,iBACxBrG,OAAA;UAAmByC,KAAK,EAAE4D,IAAK;UAAAP,QAAA,EAC5BO;QAAI,GADMA,IAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENlG,OAAA;MAAMsG,QAAQ,EAAExB,YAAa;MAAAgB,QAAA,gBAC3B9F,OAAA;QAAA8F,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlG,OAAA;QACEwC,IAAI,EAAC,UAAU;QACfC,KAAK,EAAErB,IAAI,CAACE,QAAS;QACrB8E,QAAQ,EAAE1D,kBAAmB;QAC7B6D,QAAQ;QAAAT,QAAA,gBAER9F,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAqD,QAAA,EAAC;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC5CxF,eAAe,CAAC8D,GAAG,CAAEtC,GAAG,iBACvBlC,OAAA;UAAqByC,KAAK,EAAEP,GAAG,CAACY,EAAG;UAAAgD,QAAA,GAChC5D,GAAG,CAACM,IAAI,EAAC,IAAE,EAACN,GAAG,CAACC,cAAc,EAAC,GAClC;QAAA,GAFaD,GAAG,CAACY,EAAE;UAAAiD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEZlG,OAAA;QAAA8F,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlG,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,IAAI,CAACG,IAAK;QACjB6E,QAAQ,EAAErC,gBAAiB;QAC3BwC,QAAQ;QACRC,QAAQ,EAAE,CAAC1F,cAAe;QAAAgF,QAAA,gBAE1B9F,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAqD,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1ClF,cAAc,CAACwD,GAAG,CAAE3B,CAAC,iBACpB7C,OAAA;UAAgByC,KAAK,EAAEI,CAAE;UAAAiD,QAAA,EACtBjD;QAAC,GADSA,CAAC;UAAAkD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEZlG,OAAA;QAAA8F,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlG,OAAA;QACEwC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAErB,IAAI,CAACI,IAAK;QACjB4E,QAAQ,EAAE/D,YAAa;QACvBkE,QAAQ;QACRC,QAAQ,EAAE,CAACpF,IAAI,CAACG,IAAK;QAAAuE,QAAA,gBAErB9F,OAAA;UAAQyC,KAAK,EAAC,EAAE;UAAAqD,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1ChF,cAAc,CAACsD,GAAG,CAAEiC,CAAC,iBACpBzG,OAAA;UAAgByC,KAAK,EAAEgE,CAAE;UAAAX,QAAA,EACtBN,cAAc,CAACiB,CAAC;QAAC,GADPA,CAAC;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEN,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEZlG,OAAA;QAAA8F,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNlG,OAAA;QACEwC,IAAI,EAAC,QAAQ;QACbC,KAAK,EAAErB,IAAI,CAACK,MAAO;QACnB2E,QAAQ,EAAE/D,YAAa;QACvBqE,WAAW,EAAC;MAA8B;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACFlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAAAlG,OAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEZlG,OAAA;QAAQ2G,IAAI,EAAC,QAAQ;QAAAb,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EAENxE,OAAO,iBAAI1B,OAAA;MAAA8F,QAAA,EAAIpE;IAAO;MAAAqE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAChG,EAAA,CA1PQD,eAAe;EAAA,QACLN,WAAW,EACXC,WAAW;AAAA;AAAAgH,EAAA,GAFrB3G,eAAe;AA4PxB,eAAeA,eAAe;AAAC,IAAA2G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}