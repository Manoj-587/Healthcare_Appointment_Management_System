{"ast":null,"code":"var _jsxFileName = \"E:\\\\3RD YEAR\\\\HealthcareAppointmentManagementSystem\\\\reactapp\\\\src\\\\components\\\\BookAppointment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { doctorAPI, appointmentAPI } from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookAppointment = () => {\n  _s();\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [specializationFilter, setSpecializationFilter] = useState('');\n  const [appointmentData, setAppointmentData] = useState({\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n  useEffect(() => {\n    filterDoctors();\n  }, [doctors, searchTerm, specializationFilter]);\n  const fetchDoctors = async () => {\n    try {\n      const response = await doctorAPI.getAll();\n      setDoctors(response.data);\n      setFilteredDoctors(response.data);\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n  const filterDoctors = () => {\n    let filtered = doctors;\n    if (searchTerm) {\n      filtered = filtered.filter(doctor => doctor.user.name.toLowerCase().includes(searchTerm.toLowerCase()));\n    }\n    if (specializationFilter) {\n      filtered = filtered.filter(doctor => doctor.specialization.toLowerCase().includes(specializationFilter.toLowerCase()));\n    }\n    setFilteredDoctors(filtered);\n  };\n  const handleDoctorSelect = doctor => {\n    setSelectedDoctor(doctor);\n  };\n  const handleInputChange = e => {\n    setAppointmentData({\n      ...appointmentData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n  const getDayName = date => {\n    const days = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n    return days[new Date(date).getDay()];\n  };\n  const isTimeInRange = (time, availability) => {\n    if (!availability) return false;\n    const timeSlots = availability.split(',');\n    const appointmentTime = time.replace(':', '');\n    return timeSlots.some(slot => {\n      const [start, end] = slot.split('-');\n      const startTime = start.replace(':', '');\n      const endTime = end.replace(':', '');\n      return appointmentTime >= startTime && appointmentTime <= endTime;\n    });\n  };\n  const getAvailabilityForDay = (doctor, date) => {\n    if (!doctor.dailyAvailability || !date) return null;\n    const dayName = getDayName(date);\n    return doctor.dailyAvailability[dayName] || null;\n  };\n  const formatAvailability = availability => {\n    if (!availability) return 'Not available';\n    return availability.replace(',', ', ');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n\n    // Validate availability\n    const dayAvailability = getAvailabilityForDay(selectedDoctor, appointmentData.appointmentDate);\n    if (!dayAvailability) {\n      setError('Doctor is not available on the selected date. Please choose another date.');\n      return;\n    }\n    if (!isTimeInRange(appointmentData.appointmentTime, dayAvailability)) {\n      setError(`Please book within doctor's available time: ${formatAvailability(dayAvailability)}`);\n      return;\n    }\n    setLoading(true);\n    try {\n      const bookingData = {\n        doctorId: selectedDoctor.id,\n        ...appointmentData\n      };\n      await appointmentAPI.book(bookingData);\n      alert('Appointment request submitted successfully!');\n      navigate('/patient/dashboard');\n    } catch (error) {\n      setError('Error booking appointment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const getSpecializations = () => {\n    const specializations = [...new Set(doctors.map(d => d.specialization))];\n    return specializations;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-appointment-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Book Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/patient/dashboard'),\n        className: \"back-btn\",\n        children: \"Back to Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), !selectedDoctor ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"doctor-search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search Doctors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-filters\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search by doctor name...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: specializationFilter,\n          onChange: e => setSpecializationFilter(e.target.value),\n          className: \"filter-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"All Specializations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this), getSpecializations().map(spec => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: spec,\n            children: spec\n          }, spec, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"doctors-list\",\n        children: filteredDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Dr. \", doctor.user.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Specialization:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 20\n            }, this), \" \", doctor.specialization]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Qualifications:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 20\n            }, this), \" \", doctor.qualifications]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 17\n          }, this), doctor.clinicName && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Clinic:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 22\n            }, this), \" \", doctor.clinicName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"availability-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Availability:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 22\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 19\n            }, this), doctor.dailyAvailability ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"availability-schedule\",\n              children: Object.entries(doctor.dailyAvailability).map(([day, time]) => time && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"availability-day\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"day-name\",\n                  children: [day.charAt(0) + day.slice(1).toLowerCase(), \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"time-slot\",\n                  children: formatAvailability(time)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 29\n                }, this)]\n              }, day, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"no-availability\",\n              children: \"Availability not set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDoctorSelect(doctor),\n            className: \"select-doctor-btn\",\n            children: \"Select Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 17\n          }, this)]\n        }, doctor.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"appointment-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Book Appointment with Dr. \", selectedDoctor.user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-doctor-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Specialization:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 16\n          }, this), \" \", selectedDoctor.specialization]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Qualifications:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 16\n          }, this), \" \", selectedDoctor.qualifications]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"doctor-availability\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Doctor's Availability:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this), selectedDoctor.dailyAvailability ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"availability-schedule\",\n            children: Object.entries(selectedDoctor.dailyAvailability).map(([day, time]) => time && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"availability-day\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"day-name\",\n                children: [day.charAt(0) + day.slice(1).toLowerCase(), \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"time-slot\",\n                children: formatAvailability(time)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 25\n              }, this)]\n            }, day, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"no-availability\",\n            children: \"Availability not set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), appointmentData.appointmentDate && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-day-availability\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Available on \", appointmentData.appointmentDate, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"time-range\",\n            children: formatAvailability(getAvailabilityForDay(selectedDoctor, appointmentData.appointmentDate)) || 'Not available on this day'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appointment Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"appointmentDate\",\n            value: appointmentData.appointmentDate,\n            onChange: handleInputChange,\n            min: new Date().toISOString().split('T')[0],\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Appointment Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            name: \"appointmentTime\",\n            value: appointmentData.appointmentTime,\n            onChange: handleInputChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Reason for Visit:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"reason\",\n            value: appointmentData.reason,\n            onChange: handleInputChange,\n            placeholder: \"Describe your symptoms or reason for visit...\",\n            rows: \"4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setSelectedDoctor(null),\n            className: \"secondary-btn\",\n            children: \"Change Doctor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: loading,\n            className: \"primary-btn\",\n            children: loading ? 'Booking...' : 'Book Appointment'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s(BookAppointment, \"NLul+PfS2queV+itUOsE+Jti67k=\", false, function () {\n  return [useNavigate];\n});\n_c = BookAppointment;\nexport default BookAppointment;\nvar _c;\n$RefreshReg$(_c, \"BookAppointment\");","map":{"version":3,"names":["React","useState","useEffect","doctorAPI","appointmentAPI","useNavigate","jsxDEV","_jsxDEV","BookAppointment","_s","doctors","setDoctors","filteredDoctors","setFilteredDoctors","selectedDoctor","setSelectedDoctor","searchTerm","setSearchTerm","specializationFilter","setSpecializationFilter","appointmentData","setAppointmentData","appointmentDate","appointmentTime","reason","loading","setLoading","error","setError","navigate","fetchDoctors","filterDoctors","response","getAll","data","console","filtered","filter","doctor","user","name","toLowerCase","includes","specialization","handleDoctorSelect","handleInputChange","e","target","value","getDayName","date","days","Date","getDay","isTimeInRange","time","availability","timeSlots","split","replace","some","slot","start","end","startTime","endTime","getAvailabilityForDay","dailyAvailability","dayName","formatAvailability","handleSubmit","preventDefault","dayAvailability","bookingData","doctorId","id","book","alert","getSpecializations","specializations","Set","map","d","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","placeholder","onChange","spec","qualifications","clinicName","Object","entries","day","charAt","slice","onSubmit","min","toISOString","required","rows","disabled","_c","$RefreshReg$"],"sources":["E:/3RD YEAR/HealthcareAppointmentManagementSystem/reactapp/src/components/BookAppointment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { doctorAPI, appointmentAPI } from '../utils/api';\nimport { useNavigate } from 'react-router-dom';\n\nconst BookAppointment = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [filteredDoctors, setFilteredDoctors] = useState([]);\n  const [selectedDoctor, setSelectedDoctor] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [specializationFilter, setSpecializationFilter] = useState('');\n  const [appointmentData, setAppointmentData] = useState({\n    appointmentDate: '',\n    appointmentTime: '',\n    reason: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetchDoctors();\n  }, []);\n\n  useEffect(() => {\n    filterDoctors();\n  }, [doctors, searchTerm, specializationFilter]);\n\n  const fetchDoctors = async () => {\n    try {\n      const response = await doctorAPI.getAll();\n      setDoctors(response.data);\n      setFilteredDoctors(response.data);\n    } catch (error) {\n      console.error('Error fetching doctors:', error);\n    }\n  };\n\n  const filterDoctors = () => {\n    let filtered = doctors;\n\n    if (searchTerm) {\n      filtered = filtered.filter(doctor =>\n        doctor.user.name.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n\n    if (specializationFilter) {\n      filtered = filtered.filter(doctor =>\n        doctor.specialization.toLowerCase().includes(specializationFilter.toLowerCase())\n      );\n    }\n\n    setFilteredDoctors(filtered);\n  };\n\n  const handleDoctorSelect = (doctor) => {\n    setSelectedDoctor(doctor);\n  };\n\n  const handleInputChange = (e) => {\n    setAppointmentData({\n      ...appointmentData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n  };\n\n  const getDayName = (date) => {\n    const days = ['SUNDAY', 'MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY'];\n    return days[new Date(date).getDay()];\n  };\n\n  const isTimeInRange = (time, availability) => {\n    if (!availability) return false;\n    \n    const timeSlots = availability.split(',');\n    const appointmentTime = time.replace(':', '');\n    \n    return timeSlots.some(slot => {\n      const [start, end] = slot.split('-');\n      const startTime = start.replace(':', '');\n      const endTime = end.replace(':', '');\n      return appointmentTime >= startTime && appointmentTime <= endTime;\n    });\n  };\n\n  const getAvailabilityForDay = (doctor, date) => {\n    if (!doctor.dailyAvailability || !date) return null;\n    const dayName = getDayName(date);\n    return doctor.dailyAvailability[dayName] || null;\n  };\n\n  const formatAvailability = (availability) => {\n    if (!availability) return 'Not available';\n    return availability.replace(',', ', ');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setError('');\n    \n    // Validate availability\n    const dayAvailability = getAvailabilityForDay(selectedDoctor, appointmentData.appointmentDate);\n    \n    if (!dayAvailability) {\n      setError('Doctor is not available on the selected date. Please choose another date.');\n      return;\n    }\n    \n    if (!isTimeInRange(appointmentData.appointmentTime, dayAvailability)) {\n      setError(`Please book within doctor's available time: ${formatAvailability(dayAvailability)}`);\n      return;\n    }\n    \n    setLoading(true);\n\n    try {\n      const bookingData = {\n        doctorId: selectedDoctor.id,\n        ...appointmentData\n      };\n      \n      await appointmentAPI.book(bookingData);\n      alert('Appointment request submitted successfully!');\n      navigate('/patient/dashboard');\n    } catch (error) {\n      setError('Error booking appointment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSpecializations = () => {\n    const specializations = [...new Set(doctors.map(d => d.specialization))];\n    return specializations;\n  };\n\n  return (\n    <div className=\"book-appointment-container\">\n      <div className=\"header\">\n        <h1>Book Appointment</h1>\n        <button onClick={() => navigate('/patient/dashboard')} className=\"back-btn\">\n          Back to Dashboard\n        </button>\n      </div>\n\n      {!selectedDoctor ? (\n        <div className=\"doctor-search\">\n          <h2>Search Doctors</h2>\n          \n          <div className=\"search-filters\">\n            <input\n              type=\"text\"\n              placeholder=\"Search by doctor name...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"search-input\"\n            />\n            \n            <select\n              value={specializationFilter}\n              onChange={(e) => setSpecializationFilter(e.target.value)}\n              className=\"filter-select\"\n            >\n              <option value=\"\">All Specializations</option>\n              {getSpecializations().map(spec => (\n                <option key={spec} value={spec}>{spec}</option>\n              ))}\n            </select>\n          </div>\n\n          <div className=\"doctors-list\">\n            {filteredDoctors.map(doctor => (\n              <div key={doctor.id} className=\"doctor-card\">\n                <h3>Dr. {doctor.user.name}</h3>\n                <p><strong>Specialization:</strong> {doctor.specialization}</p>\n                <p><strong>Qualifications:</strong> {doctor.qualifications}</p>\n                {doctor.clinicName && (\n                  <p><strong>Clinic:</strong> {doctor.clinicName}</p>\n                )}\n                <div className=\"availability-info\">\n                  <p><strong>Availability:</strong></p>\n                  {doctor.dailyAvailability ? (\n                    <div className=\"availability-schedule\">\n                      {Object.entries(doctor.dailyAvailability).map(([day, time]) => (\n                        time && (\n                          <div key={day} className=\"availability-day\">\n                            <span className=\"day-name\">{day.charAt(0) + day.slice(1).toLowerCase()}:</span>\n                            <span className=\"time-slot\">{formatAvailability(time)}</span>\n                          </div>\n                        )\n                      ))}\n                    </div>\n                  ) : (\n                    <p className=\"no-availability\">Availability not set</p>\n                  )}\n                </div>\n                <button \n                  onClick={() => handleDoctorSelect(doctor)}\n                  className=\"select-doctor-btn\"\n                >\n                  Select Doctor\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div className=\"appointment-form\">\n          <h2>Book Appointment with Dr. {selectedDoctor.user.name}</h2>\n          \n          <div className=\"selected-doctor-info\">\n            <p><strong>Specialization:</strong> {selectedDoctor.specialization}</p>\n            <p><strong>Qualifications:</strong> {selectedDoctor.qualifications}</p>\n            \n            <div className=\"doctor-availability\">\n              <h4>Doctor's Availability:</h4>\n              {selectedDoctor.dailyAvailability ? (\n                <div className=\"availability-schedule\">\n                  {Object.entries(selectedDoctor.dailyAvailability).map(([day, time]) => (\n                    time && (\n                      <div key={day} className=\"availability-day\">\n                        <span className=\"day-name\">{day.charAt(0) + day.slice(1).toLowerCase()}:</span>\n                        <span className=\"time-slot\">{formatAvailability(time)}</span>\n                      </div>\n                    )\n                  ))}\n                </div>\n              ) : (\n                <p className=\"no-availability\">Availability not set</p>\n              )}\n            </div>\n            \n            {appointmentData.appointmentDate && (\n              <div className=\"selected-day-availability\">\n                <h4>Available on {appointmentData.appointmentDate}:</h4>\n                <p className=\"time-range\">\n                  {formatAvailability(getAvailabilityForDay(selectedDoctor, appointmentData.appointmentDate)) || 'Not available on this day'}\n                </p>\n              </div>\n            )}\n          </div>\n\n          {error && <div className=\"error-message\">{error}</div>}\n\n          <form onSubmit={handleSubmit}>\n            <div className=\"form-group\">\n              <label>Appointment Date:</label>\n              <input\n                type=\"date\"\n                name=\"appointmentDate\"\n                value={appointmentData.appointmentDate}\n                onChange={handleInputChange}\n                min={new Date().toISOString().split('T')[0]}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Appointment Time:</label>\n              <input\n                type=\"time\"\n                name=\"appointmentTime\"\n                value={appointmentData.appointmentTime}\n                onChange={handleInputChange}\n                required\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label>Reason for Visit:</label>\n              <textarea\n                name=\"reason\"\n                value={appointmentData.reason}\n                onChange={handleInputChange}\n                placeholder=\"Describe your symptoms or reason for visit...\"\n                rows=\"4\"\n              />\n            </div>\n\n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                onClick={() => setSelectedDoctor(null)}\n                className=\"secondary-btn\"\n              >\n                Change Doctor\n              </button>\n              <button type=\"submit\" disabled={loading} className=\"primary-btn\">\n                {loading ? 'Booking...' : 'Book Appointment'}\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default BookAppointment;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}