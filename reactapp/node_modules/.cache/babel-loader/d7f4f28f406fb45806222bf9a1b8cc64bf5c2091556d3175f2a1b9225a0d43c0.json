{"ast":null,"code":"var _jsxFileName = \"E:\\\\3RD YEAR\\\\HealthcareAppointmentManagementSystem\\\\reactapp\\\\src\\\\components\\\\LoginPatient.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { loginPatient } from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPatient() {\n  _s();\n  const [form, setForm] = useState({\n    emailOrPhone: \"\",\n    password: \"\"\n  });\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const data = await loginPatient(form);\n      setMessage(`Welcome back, ${data.name}`);\n\n      // Redirect to dashboard and pass patient info\n      navigate(\"/dashboard\", {\n        state: {\n          patient: data\n        }\n      });\n    } catch (error) {\n      setMessage(error.message || \"Login failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"400px\",\n      margin: \"20px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"emailOrPhone\",\n        placeholder: \"Email or Phone Number\",\n        value: form.emailOrPhone,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          marginTop: \"10px\"\n        },\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPatient, \"Er7CNePWsOSrVwpqp0IPfBtdSSk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPatient;\nexport default LoginPatient;\nvar _c;\n$RefreshReg$(_c, \"LoginPatient\");","map":{"version":3,"names":["React","useState","useNavigate","loginPatient","jsxDEV","_jsxDEV","LoginPatient","_s","form","setForm","emailOrPhone","password","message","setMessage","navigate","handleChange","e","target","name","value","handleSubmit","preventDefault","data","state","patient","error","style","maxWidth","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","marginTop","_c","$RefreshReg$"],"sources":["E:/3RD YEAR/HealthcareAppointmentManagementSystem/reactapp/src/components/LoginPatient.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { loginPatient } from \"../utils/api\";\r\n\r\nfunction LoginPatient() {\r\n  const [form, setForm] = useState({ emailOrPhone: \"\", password: \"\" });\r\n  const [message, setMessage] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const data = await loginPatient(form);\r\n      setMessage(`Welcome back, ${data.name}`);\r\n\r\n      // Redirect to dashboard and pass patient info\r\n      navigate(\"/dashboard\", { state: { patient: data } });\r\n    } catch (error) {\r\n      setMessage(error.message || \"Login failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"400px\", margin: \"20px auto\" }}>\r\n      <h2>Patient Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"emailOrPhone\"\r\n          placeholder=\"Email or Phone Number\"\r\n          value={form.emailOrPhone}\r\n          onChange={handleChange}\r\n          required\r\n        /><br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          required\r\n        /><br />\r\n        <button type=\"submit\" style={{ marginTop: \"10px\" }}>Login</button>\r\n      </form>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPatient;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}