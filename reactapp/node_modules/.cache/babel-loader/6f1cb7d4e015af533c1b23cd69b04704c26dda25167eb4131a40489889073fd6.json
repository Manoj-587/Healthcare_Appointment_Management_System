{"ast":null,"code":"const auth = \"http://localhost:8080/api/auth\";\n\n// Register patient\nexport async function registerPatient(data) {\n  const response = await fetch(`${auth}/register/patient`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  return response.json();\n}\n\n// Login patient\nexport async function loginPatient(credentials) {\n  const res = await fetch(`${auth}/login/patient`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(credentials)\n  });\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(errorText || \"Login failed\");\n  }\n  return res.json();\n}\n\n// Fetch patient appointments\nconst patientUrl = \"http://localhost:8080/api/patients\";\nexport async function fetchPatientAppointments(patientId) {\n  const res = await fetch(`${patientUrl}/${patientId}`);\n  if (!res.ok) {\n    const errorText = await res.text();\n    throw new Error(errorText || \"Failed to fetch appointments\");\n  }\n  return res.json();\n}\n\n// Fetch doctors and parse dailyAvailability\nexport async function fetchDoctors() {\n  const res = await fetch(\"http://localhost:8080/api/doctors\");\n  const data = await res.json();\n\n  // Parse dailyAvailability JSON string into object\n  return data.map(doc => ({\n    ...doc,\n    dailyAvailability: typeof doc.dailyAvailability === \"string\" ? JSON.parse(doc.dailyAvailability) : doc.dailyAvailability\n  }));\n}\n\n// Create appointment\nexport const createAppointment = async data => {\n  const response = await fetch(\"http://localhost:8080/api/appointments\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.message || \"Failed to create appointment\");\n  }\n  return await response.json();\n};","map":{"version":3,"names":["auth","registerPatient","data","response","fetch","method","headers","body","JSON","stringify","json","loginPatient","credentials","res","ok","errorText","text","Error","patientUrl","fetchPatientAppointments","patientId","fetchDoctors","map","doc","dailyAvailability","parse","createAppointment","error","message"],"sources":["E:/3RD YEAR/HealthcareAppointmentManagementSystem/reactapp/src/utils/api.js"],"sourcesContent":["const auth = \"http://localhost:8080/api/auth\";\r\n\r\n// Register patient\r\nexport async function registerPatient(data) {\r\n  const response = await fetch(`${auth}/register/patient`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  });\r\n  return response.json();\r\n}\r\n\r\n// Login patient\r\nexport async function loginPatient(credentials) {\r\n  const res = await fetch(`${auth}/login/patient`, {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(credentials),\r\n  });\r\n  if (!res.ok) {\r\n    const errorText = await res.text();\r\n    throw new Error(errorText || \"Login failed\");\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Fetch patient appointments\r\nconst patientUrl = \"http://localhost:8080/api/patients\";\r\n\r\nexport async function fetchPatientAppointments(patientId) {\r\n  const res = await fetch(`${patientUrl}/${patientId}`);\r\n  if (!res.ok) {\r\n    const errorText = await res.text();\r\n    throw new Error(errorText || \"Failed to fetch appointments\");\r\n  }\r\n  return res.json();\r\n}\r\n\r\n// Fetch doctors and parse dailyAvailability\r\nexport async function fetchDoctors() {\r\n  const res = await fetch(\"http://localhost:8080/api/doctors\");\r\n  const data = await res.json();\r\n\r\n  // Parse dailyAvailability JSON string into object\r\n  return data.map(doc => ({\r\n    ...doc,\r\n    dailyAvailability:\r\n      typeof doc.dailyAvailability === \"string\"\r\n        ? JSON.parse(doc.dailyAvailability)\r\n        : doc.dailyAvailability\r\n  }));\r\n}\r\n\r\n// Create appointment\r\nexport const createAppointment = async (data) => {\r\n  const response = await fetch(\"http://localhost:8080/api/appointments\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(data),\r\n  });\r\n  if (!response.ok) {\r\n    const error = await response.json();\r\n    throw new Error(error.message || \"Failed to create appointment\");\r\n  }\r\n  return await response.json();\r\n};\r\n"],"mappings":"AAAA,MAAMA,IAAI,GAAG,gCAAgC;;AAE7C;AACA,OAAO,eAAeC,eAAeA,CAACC,IAAI,EAAE;EAC1C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,IAAI,mBAAmB,EAAE;IACvDK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACO,IAAI,CAAC,CAAC;AACxB;;AAEA;AACA,OAAO,eAAeC,YAAYA,CAACC,WAAW,EAAE;EAC9C,MAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,GAAGJ,IAAI,gBAAgB,EAAE;IAC/CK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACG,WAAW;EAClC,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACC,EAAE,EAAE;IACX,MAAMC,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAACF,SAAS,IAAI,cAAc,CAAC;EAC9C;EACA,OAAOF,GAAG,CAACH,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,MAAMQ,UAAU,GAAG,oCAAoC;AAEvD,OAAO,eAAeC,wBAAwBA,CAACC,SAAS,EAAE;EACxD,MAAMP,GAAG,GAAG,MAAMT,KAAK,CAAC,GAAGc,UAAU,IAAIE,SAAS,EAAE,CAAC;EACrD,IAAI,CAACP,GAAG,CAACC,EAAE,EAAE;IACX,MAAMC,SAAS,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;IAClC,MAAM,IAAIC,KAAK,CAACF,SAAS,IAAI,8BAA8B,CAAC;EAC9D;EACA,OAAOF,GAAG,CAACH,IAAI,CAAC,CAAC;AACnB;;AAEA;AACA,OAAO,eAAeW,YAAYA,CAAA,EAAG;EACnC,MAAMR,GAAG,GAAG,MAAMT,KAAK,CAAC,mCAAmC,CAAC;EAC5D,MAAMF,IAAI,GAAG,MAAMW,GAAG,CAACH,IAAI,CAAC,CAAC;;EAE7B;EACA,OAAOR,IAAI,CAACoB,GAAG,CAACC,GAAG,KAAK;IACtB,GAAGA,GAAG;IACNC,iBAAiB,EACf,OAAOD,GAAG,CAACC,iBAAiB,KAAK,QAAQ,GACrChB,IAAI,CAACiB,KAAK,CAACF,GAAG,CAACC,iBAAiB,CAAC,GACjCD,GAAG,CAACC;EACZ,CAAC,CAAC,CAAC;AACL;;AAEA;AACA,OAAO,MAAME,iBAAiB,GAAG,MAAOxB,IAAI,IAAK;EAC/C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;IACrEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;EAC3B,CAAC,CAAC;EACF,IAAI,CAACC,QAAQ,CAACW,EAAE,EAAE;IAChB,MAAMa,KAAK,GAAG,MAAMxB,QAAQ,CAACO,IAAI,CAAC,CAAC;IACnC,MAAM,IAAIO,KAAK,CAACU,KAAK,CAACC,OAAO,IAAI,8BAA8B,CAAC;EAClE;EACA,OAAO,MAAMzB,QAAQ,CAACO,IAAI,CAAC,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}